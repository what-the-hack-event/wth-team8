# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET



on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths: 
      - 'Application/**'
  pull_request:
    branches: [ "main" ]
    paths: 
      - 'Application/**'  
  
env:
    GH_TOKEN: ${{ secrets.GH_TOKEN }}
    ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
    ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
    AZURE_WEBAPP_NAME: mhxwf75axzxru
    ENVIRONMENT: dev
    registryName: mhxwf75axzxruwthreg.azurecr.io
    repositoryName: wth/dotnetcoreapp
    dockerFolderPath: Application/src/RazorPagesTestSample
    tag: ${{ github.run_number}}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore ./Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj
      
    - name: Build
      run: dotnet build ./Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj --no-restore
    - name: Test
      run: dotnet test ./Application/tests/RazorPagesTestSample.Tests/RazorPagesTestSample.Tests.csproj --no-build --verbosity normal
    #- name: Failing step
    #  id: demo
    #  run: exit 1
    #- name: failed job notification
    #  if: failure()
    #  run: |
    #    gh issue create --title "Job failed" --body "Job failed for $GITHUB_SHA"

  dockerJob:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Docker Login
      run: docker login $registryName -u $ACR_USERNAME -p $ACR_PASSWORD
    - name: Docker Build
      run: docker build -t $registryName/$repositoryName:$tag --build-arg build_version=$tag $dockerFolderPath
    - name: Docker Push
      run: docker push $registryName/$repositoryName:$tag

  deploy:
    runs-on: ubuntu-latest
    needs: [build, dockerJob]
    steps:
    - uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }} + '-' + ${{ env.ENVIRONMENT }}
        images: $registryName/$repositoryName:$tag
       